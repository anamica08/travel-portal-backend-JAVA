github repo:
_____________
backend: https://github.com/anamica08/travel-portal-nagarro-backend-JAVA
frontend:https://github.com/anamica08/travel-portal-nagarro
Base Package: com.nagarro.travelportal
_____________________________________________________________________________________________________________________________________________________________________

1. created model classes Ticket and Employee with @Entity annotation.
	1.1 created 3 enum in com.nagarro.travelportal.enum package
	
2. created dao classes with @Respository annotation.
	2.1 added mysql connection parameters to properties file.

3. created service classes containing basic service methods for controllers, with @Service annotation.
	Injected the dao class dependency to use its methods.
	
4. created controller classes with @RestController annotations.
	4.1 AdminLoginController handle admin login authentication and returna json object as string with login status and username .
	4.2 EmployeeLoginController handles employee login authentication and returns json object as string with login status and username. 
	4.3 RegistrationController handles adding a new user to the system.
	4.4 TicketController handles raising a new ticket and retreiving tickets of a particular user.
	
5. created a email service class with @Service which will be used to send email.	

6. implemented sendEmail methods in Login contoller for forgot password module and in Register controller
	if user is succesfully added to system. 
7. implemented validation check if user already registered with system he cannot register and a mail with
	 his username password will be sent to his registered email address.
_________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________	
Assumption:

					*************User are Employee and Admin.********************.

- Only one admin is there with username = admin and password = 1234.
- Email with username and password will be sent to only registered email adress for the user.
- username and email address are same.
- if user tries to register again then a mail with his username password will be sent to his registered email address.
- Mail related to Admin will go to anamikalbsim@gmail.com.



_________________________________________________________________________________________________________________________________________________________________________________________________________________________



Login Registration Flow : 


-> user logins -->login succesfull-->JWTToekn is returned --> then access to other user api.
-> user logins --> If login fails --> then

		user clicks forgot password --> ForgotPassword controller works --> checks
		 	if user exist with this email
				mail is sent with username password.
			else 
				404 response is sent with message "user not found" and user will be redirected to registration screen.
		----OR---
		
		user clicks register the Registration Controller works.















add dependency in pom
add secret key in applications.property
create a package  .config
	create a class jwttokenutil
in service package create jwtuserdetailsservice
in controller create jwt authentication controller
now we create jwtrequest jwtreposne model , i will rename login credentials for that. and add implemenets Serializable in that
created websecurity jwtrequestfilter jwtauthenticationentrypoint in .config